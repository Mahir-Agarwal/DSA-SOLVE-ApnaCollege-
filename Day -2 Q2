class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int mrow = bsTofindRow(matrix, target);
        if (mrow != -1) {
            return bsOnRow(mrow, matrix, target);
        } else {
            return false;
        }
    }

    public static int bsTofindRow(int[][] matrix, int target) {
        int s = 0;
        int e = matrix.length - 1;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            if (matrix[mid][0] <= target && target <= matrix[mid][matrix[0].length - 1]) {
                return mid;
            } else if (matrix[mid][0] < target) {
                s = mid + 1;
            } else {
                e = mid - 1;
            }
        }
        return -1;
    }

    public static boolean bsOnRow(int mrow, int[][] matrix, int target) {
        int s = 0;
        int e = matrix[mrow].length - 1;
        while (s <= e) {
            int mid = s + (e - s) / 2;
            if (matrix[mrow][mid] == target) {
                return true;
            } else if (matrix[mrow][mid] < target) {
                s = mid + 1;
            } else {
                e = mid - 1;
            }
        }
        return false;
    }
}
